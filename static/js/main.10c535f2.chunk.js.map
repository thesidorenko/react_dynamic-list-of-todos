{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onShowButtonClick","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setFilter","setQuery","resetQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","TodoModal","user","onClose","useState","showLoader","setShowLoader","useEffect","timer","setTimeout","clearTimeout","href","email","name","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","App","userId","setTodos","setUser","loadingTodos","setLoadingTodos","setSelectedTodo","filter","filteredTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10c535f2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onShowButtonClick: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onShowButtonClick,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo?.id === todo.id,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onShowButtonClick(todo)}\n                >\n                  <span className=\"icon\">\n                    {selectedTodo?.id === todo.id\n                      ? <i className=\"far fa-eye-slash\" />\n                      : <i className=\"far fa-eye\" />}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  query: string,\n  setFilter: (value: string) => void,\n  setQuery: (query: string) => void,\n  resetQuery: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setFilter,\n  setQuery,\n  resetQuery,\n}) => {\n  const handleValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleReset = () => {\n    resetQuery();\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            // value={value}\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User | null,\n  selectedTodo: Todo | null,\n  onClose: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ user, selectedTodo, onClose }) => {\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setShowLoader(true);\n    }\n\n    const timer = setTimeout(() => {\n      setShowLoader(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {showLoader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !selectedTodo?.completed,\n                  'has-text-success': selectedTodo?.completed,\n                })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingTodos, setLoadingTodos] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<null | Todo>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos);\n      setLoadingTodos(false);\n    }, 1000);\n  }, []);\n\n  if (selectedTodo) {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }\n\n  let filteredTodos = todos;\n\n  if (filter === 'active') {\n    filteredTodos = todos.filter(todo => !todo.completed);\n  }\n\n  if (filter === 'completed') {\n    filteredTodos = todos.filter(todo => todo.completed);\n  }\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  const resetQuery = () => {\n    setQuery('');\n    setTodos(todos);\n  };\n\n  const handleShowButtonClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setFilter={setFilter}\n                setQuery={setQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadingTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onShowButtonClick={handleShowButtonClick}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal user={user} selectedTodo={selectedTodo} onClose={handleModalClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}